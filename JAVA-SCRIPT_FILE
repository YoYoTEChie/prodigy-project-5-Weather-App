<script>
const apiKey = 'c78455429219da71821eee31daf31651'; // Replace with your OpenWeatherMap API key
const weatherInfo = document.getElementById('weatherInfo');
const getWeatherBtn = document.getElementById('getWeatherBtn');
const getCurrentLocationWeatherBtn = document.getElementById('getCurrentLocationWeatherBtn');
const locationInput = document.getElementById('locationInput');

getWeatherBtn.addEventListener('click', () => {
    const location = locationInput.value;
    if (location) {
        fetchWeatherData(location);
    }
});

getCurrentLocationWeatherBtn.addEventListener('click', () => {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(position => {
            const lat = position.coords.latitude;
            const lon = position.coords.longitude;
            fetchWeatherData(null, lat, lon);
        });
    } else {
        weatherInfo.innerHTML = '<p>Geolocation is not supported by this browser.</p>';
    }
});

function fetchWeatherData(location, lat = null, lon = null) {
    let url;
    if (location) {
        url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${apiKey}&units=metric`;
    } else {
        url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;
    }
    
    fetch(url)
        .then(response => response.json())
        .then(data => displayWeatherData(data))
        .catch(error => {
            weatherInfo.innerHTML = `<p>Could not fetch weather data. Error: ${error.message}</p>`;
        });
}

function displayWeatherData(data) {
    if (data.cod !== 200) {
        weatherInfo.innerHTML = `<p>Could not fetch weather data. Error: ${data.message}</p>`;
        return;
    }

    const weatherHTML = `
        <div class="weather-data">
            <h2>${data.name}</h2>
            <p>Temperature: ${data.main.temp} Â°C</p>
            <p>Weather: ${data.weather[0].description}</p>
            <p>Humidity: ${data.main.humidity}%</p>
            <p>Wind Speed: ${data.wind.speed} m/s</p>
        </div>
    `;

    weatherInfo.innerHTML = weatherHTML;
}
</script>
